/**
 * Customize default theme styling by overriding CSS variables:
 * https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * Colors
 *
 * Each colors have exact same color scale system with 3 levels of solid
 * colors with different brightness, and 1 soft color.
 *
 * - `XXX-1`: The most solid color used mainly for colored text. It must
 *   satisfy the contrast ratio against when used on top of `XXX-soft`.
 *
 * - `XXX-2`: The color used mainly for hover state of the button.
 *
 * - `XXX-3`: The color for solid background, such as bg color of the button.
 *   It must satisfy the contrast ratio with pure white (#ffffff) text on
 *   top of it.
 *
 * - `XXX-soft`: The color used for subtle background such as custom container
 *   or badges. It must satisfy the contrast ratio when putting `XXX-1` colors
 *   on top of it.
 *
 *   The soft color must be semi transparent alpha channel. This is crucial
 *   because it allows adding multiple "soft" colors on top of each other
 *   to create a accent, such as when having inline code block inside
 *   custom containers.
 *
 * - `default`: The color used purely for subtle indication without any
 *   special meanings attached to it such as bg color for menu hover state.
 *
 * - `brand`: Used for primary brand colors, such as link text, button with
 *   brand theme, etc.
 *
 * - `tip`: Used to indicate useful information. The default theme uses the
 *   brand color for this by default.
 *
 * - `warning`: Used to indicate warning to the users. Used in custom
 *   container, badges, etc.
 *
 * - `danger`: Used to show error, or dangerous message to the users. Used
 *   in custom container, badges, etc.
 * -------------------------------------------------------------------------- */

:root {
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  --vp-c-brand-1: var(--vp-c-indigo-1);
  --vp-c-brand-2: var(--vp-c-indigo-2);
  --vp-c-brand-3: var(--vp-c-indigo-3);
  --vp-c-brand-soft: var(--vp-c-indigo-soft);

  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);
}

/**
 * Component: Button
 * -------------------------------------------------------------------------- */

:root {
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);
}

/**
 * Component: Home
 * -------------------------------------------------------------------------- */

:root {
  --vp-home-hero-name-color: transparent;
  --vp-home-hero-name-background: -webkit-linear-gradient(
    120deg,
    #fde4d0,
    #ffa45c 60%
  );
  --vp-home-hero-image-size: cover;
  --vp-home-hero-image-background-image: radial-gradient(
    circle at center,
    rgba(0,0,0,0) 30%,
    #ffa45c 70%
  );
  --vp-home-hero-image-filter: blur(44px);
}

.VPButton.medium.brand {
  background-color: #ffa45c; /* 例如：改为红色 */
  color: white;
  border-color: #ffa45c;
}

.VPButton.medium.brand:hover {
  background-color: #ec8a39;
  color: white;
  border-color: #ec8a39;
}

.VPLink.link.no-icon.VPFeature:hover{
  border-color: #ffa45c;
}



@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
}



/**
 * Component: Custom Block
 * -------------------------------------------------------------------------- */

:root {
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/**
 * Component: Algolia
 * -------------------------------------------------------------------------- */

.DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}


.vp-doc pre, .vp-doc code {
  white-space: pre-wrap !important;   /* 允许换行，保留空格 */
  word-break: break-word;             /* 允许长单词断行 */
  word-wrap: break-word;              /* 同上，兼容性更好 */
  overflow-x: auto;                   /* 可选：保留横向滚动作为 fallback */
}



/* 使图片浮动到右侧 */
.float-right-image img {
  float: right;
  margin-left: 15px; /* 在图片和环绕文本之间留出一些空间 */
  max-width: 15%; /* 根据需要调整图片大小 */
}

/* 使图片浮动到右侧 */
.img_feature img {
  float: right;
  margin-left: 15px; /* 在图片和环绕文本之间留出一些空间 */
  max-width: 50%; /* 根据需要调整图片大小 */
  position: relative;
  top: -60px; 
}

.h2-no-border :is(h2) {
  border-top: none; /* 移除上方的分隔线 */
}

.bilibili-video-container {
  position: relative;
  width: 80%;
  max-width: 1200px; /* 可选：设置最大宽度 */
  margin: 0 auto; /* 居中 */
  padding-top: 45%; /* 16:9比例计算 (9/16=0.5625) */
}

.bilibili-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 8px; /* 可选：圆角 */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* 可选：阴影 */
}

/**
 * Component: NBTTree
 * -------------------------------------------------------------------------- */
.nbt-template {
  background-color: #daf3ff;
}

.nbt-node-icons {
  display: flex;
  flex-wrap: wrap;
}

.nbt-icon {
  width: 16px;
  height: 16px;
  min-width: 16px;
  display: inline-block;
  margin: 0.3em -0.1em 0 0;
}

.nbt-icon img {
  width: 100%;
  height: 100%;
}

.nbt-tree {
  display: flex;
  flex-direction: column;
  gap: 0.2em;
}

.nbt-tree>span {
  display: flex;
  align-items: flex-start;
  gap: 0.4em;
}

.nbt-seg {
  font-family: monospace;
}

.fold-button {
  color: rgb(10, 69, 152);
  cursor: pointer;
  font-size: 14px;
  margin-left: 1em;
  user-select: none;
  /* 标准属性 */
  -webkit-user-select: none;
  /* Safari/Chrome */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* IE10+ */
}

.expandable-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}

.expandable-content.expanded {
  max-height: 9000px;
  /* 设置为大于内容实际高度的值 */
}

.error-alert {
  width: 90%;
  border: 1px solid #f26e64;
  /* 红色边框 */
  border-radius: 4px;
  background-color: #ffebee;
  /* 淡红色背景 */
  font-family: Arial, sans-serif;
  margin: 20px auto;
  overflow: hidden;
}

.error-header {
  color: #d32f2f;
  /* 深红色文字 */
  padding: 16px 12px;
  font-weight: bold;
  font-size: 16px;
}

.error-content {
  padding: 0px 16px 16px 16px;
  color: #d32f2f;
  /* 深红色文字 */
  text-align: left;
  /* 居中显示错误信息 */
  font-size: 14px;
  line-height: 1.5;
}

.error-content pre {
  white-space: pre-wrap;
  /* 保留换行和空白，并自动换行 */
  word-break: break-word;
  /* 超长单词也断行 */
}

.nbttree {
  line-height:1.6em;
  margin-bottom: 1.6em;
}

.nbttree span{
  line-height:1.6em;
  display: inline-block;
  /* 使用负 text-indent 控制首行对齐连接符 */
  text-indent: -20px;
  padding-left: 20px;
}

.nbttree img {
    float: left; 
    margin: 3px;
    width: 18px;
}


.nbttree ul {
  list-style: none;
  padding: 0px 0px 0px 0.7em;
  margin-top: 0.4em;
  margin-bottom: 0em;
  line-height: 1.6; /* 控制行高一致 */
  box-sizing: border-box;
}

.nbttree li {
  position: relative;
  padding-left: 20px; /* 为连接符和缩进留空间 */
  margin: 0;
  box-sizing: border-box;
}



/* 绘制连接线：从当前 li 顶部到底部的竖线 */
.nbttree li::after{
  content: '';
  position: absolute;
  left: 0;
  border-left: 1px solid #000;
  box-sizing: border-box;
}

.dark .nbttree li::after{
  border-left: 1px solid #fff;
}

.nbttree li:not(:last-child)::after {
  top: -0.8em;
  bottom: -0.8em;
}

.nbttree li:last-child::after {
  top: -0.8em;
  height: 1.5em;
}


/* 连接符：├─ 或 └─ */
.nbttree li::before {
  content: '──';
  position: absolute;
  left: -8px;
  top: 0;
  width: 40px;
  height: 1.6em; /* 与 line-height 对应 */
  line-height: 1.6em;
  text-align: center;
  background-color: inherit;
  z-index: 1;
  box-sizing: border-box;
}

/* 确保文本换行后也能缩进对齐 */
.nbttree li > span {
  word-break: break-word;
  
  /* 保证换行后其他行正常缩进 */
  margin-left: 0;
  box-sizing: border-box;
}

/* 基础样式 */
.nbttree details {
  padding: 0px 0px 0px 0px;
  position: relative;
  width:100%;
  top:0px;
  background-color: #DAF3FF;
  border-radius: 0px;
  margin-bottom: 0px;
}


.dark .nbttree details {
    background-color: #333c40;
}

/* summary 标签样式 */
.nbttree details > summary {
  padding: 4px 0px 0px 32px;
  margin-top:0px;
  font-weight: bold;
  cursor: pointer;
  list-style: none; /* 移除默认的三角标记 */
  display: flex;
  align-items: center;
  user-select: none;
  margin-bottom: 0px;
}

/* 为 summary 添加自定义的展开/收起指示器 */
.nbttree details > summary::marker {
  display: none; /* 隐藏默认 marker */
}
.nbttree details > summary::after {
  content: "  [展开]";
  font-weight:normal;
  margin-left: 5px;
  color: #0066cc; /* 默认链接颜色，可根据需要调整 */
  /* 如果需要更精确地匹配链接颜色，可以考虑不设置 color，或者使用 inherit */
  /* color: inherit; */
}

.dark .nbttree details > summary::after {
  color: #DAF3FF;
}

/* 展开状态下的 details */
.nbttree details[open] > summary::after {
  content: "  [收起]";
}

/* 展开内容的样式 */
.nbttree details[open] > :not(summary) {
  margin-top: 4px;
}

/* 连接线 */
.nbttree details::after{
  content: '';
  position: absolute;
  left: 0.7em;
  top: 0em;
  height: 1.8em;
  border-left: 1px solid #000;
  box-sizing: border-box;
}

.nbttree details + details::after{
  content: '';
  position: absolute;
  left: 10pxem;
  top: -1em;
  height: 2.8em;
  border-left: 1px solid #000;
  box-sizing: border-box;
}


.nbttree details:not([open]):last-child::after{
  top: 0em;
  height: 1.8em;
  border-left: 1px dashed #000;
}

.dark .nbttree details::after{
  border-left: 1px solid #fff;
}

/* 处理nbt树空开的一行 */
.nbttree details + ul > li:first-child::after {
  top: -2.2em;
  bottom: -0.8em;
}


.nbttree ul + details > ul > li:first-child::after {
  top: -1.6em;
}

